use crate::structures::saved_config::TMC2209_SavedConfig;

impl TMC2209_SavedConfig {
    /// Create new TMC2209_SavedConfig with "empty" values
    pub fn new() -> TMC2209_SavedConfig {
        TMC2209_SavedConfig {
            rms_current: 0,
            ihold_delay: 0,
            microsteps: 0,
            interpolation: false,
            blank_time: 0,
            hysteresis_end: 0,
            hysteresis_start: 0,
            tpowerdown: 0,
            tpwmthrs: 0,
            sgthrs: 0,
            tcoolthrs: 0,
            en_spreadcycle: false,
            pdn_disable: false,
            pwm_ofs: 0,
            pwm_grad: 0,
            pwm_freq: 0,
            pwm_autoscale: false,
            pwm_autograd: false,
            pwm_reg: 0,
            pwm_lim: 0,
            freewheel: 0,
            internal_rsense: false,
            i_scale_analog: false,
            mstep_reg_select: false,
            multistep_filt: false,
            index_otpw: false,
            index_step: false,
            toff: 0,
            vsense: false,
            dedge: false,
            diss2g: false,
            diss2vs: false,
            fclktrim: 0,
            ottrim: 0,
            shaft: false,
            seimin: false,
            sedn: 0,
            seup: 0,
            semax: 0,
            semin: 0,
            senddelay: 0,
        }
    }
}

impl Clone for TMC2209_SavedConfig {
    fn clone(&self) -> Self {
        TMC2209_SavedConfig {
            rms_current: self.rms_current,
            ihold_delay: self.ihold_delay,
            microsteps: self.microsteps,
            interpolation: self.interpolation,
            blank_time: self.blank_time,
            hysteresis_end: self.hysteresis_end,
            hysteresis_start: self.hysteresis_start,
            tpowerdown: self.tpowerdown,
            tpwmthrs: self.tpwmthrs,
            sgthrs: self.sgthrs,
            tcoolthrs: self.tcoolthrs,
            en_spreadcycle: self.en_spreadcycle,
            pdn_disable: self.pdn_disable,
            pwm_ofs: self.pwm_ofs,
            pwm_grad: self.pwm_grad,
            pwm_freq: self.pwm_freq,
            pwm_autoscale: self.pwm_autoscale,
            pwm_autograd: self.pwm_autograd,
            pwm_reg: self.pwm_reg,
            pwm_lim: self.pwm_lim,
            freewheel: self.freewheel,
            internal_rsense: self.internal_rsense,
            i_scale_analog: self.i_scale_analog,
            mstep_reg_select: self.mstep_reg_select,
            multistep_filt: self.multistep_filt,
            index_otpw: self.index_otpw,
            index_step: self.index_step,
            toff: self.toff,
            vsense: self.vsense,
            dedge: self.dedge,
            diss2g: self.diss2g,
            diss2vs: self.diss2vs,
            fclktrim: self.fclktrim,
            ottrim: self.ottrim,
            shaft: self.shaft,
            seimin: self.seimin,
            sedn: self.sedn,
            seup: self.seup,
            semax: self.semax,
            semin: self.semin,
            senddelay: self.senddelay,
        }
    }
}
